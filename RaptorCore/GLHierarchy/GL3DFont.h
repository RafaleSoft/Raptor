// GL3DFont.h: interface for the CGL3DFont class.
//
//////////////////////////////////////////////////////////////////////
#if !defined(AFX_GL3DFONT_H__81553B3D_92A7_4C82_80E7_B6F98CBD75FA__INCLUDED_)
#define AFX_GL3DFONT_H__81553B3D_92A7_4C82_80E7_B6F98CBD75FA__INCLUDED_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

class FTFace;
class TTOutlineFont;


#if !defined(AFX_GLFONT_H__D451FE62_5FE1_11D3_9142_BA23BC92E77C__INCLUDED_)
	#include "GLHierarchy/GLFont.h"
#endif


RAPTOR_NAMESPACE_BEGIN

class CGeometry;
class C3DSet;


class RAPTOR_API CGL3DFont : public CGLFont
{
public:
	CGL3DFont(const std::string& name = "GL3DFont");
	virtual ~CGL3DFont();

	//! initialise the 3D font:
	//! - opens the font file
	//! - configure the font with size.
	bool init(const std::string &name,
			  unsigned int size,
			  bool faceTextured,
			  bool sideTextured);

	//!	3D font writer: generates a display built with the glyphs generated by genGlyphs.
	//! @param text : the text to write
	//! @param glyphset : the index of a generated glyphset ( with genGlyphs )
	//! @param width : if non NULL, receive the width of the whole text
	//! @param height : if non NULL, receive the height of the whole text
	//! @return a handle to the display list for the text.
	//! Rq: a 3D font must be created with create3D.
	RAPTOR_HANDLE glWriteList(const std::string &text,
							  unsigned int glyphset,
							  float *width = NULL,
							  float *height = NULL);


	//!	This method generates a geometry of the text string using this font if initialised by create3D
	//! @see genGlyphs for parameters.
	CGeometry* glBuildGeometry(const std::string &str,
							   float precision,
							   float extrusion,
							   float scale);

	//!	This method generates a set of geometries from the text string using this font if initialised by create3D.
	//! buildGeometry is used for each character of the string.
	C3DSet* glBuildSet(const std::string& str,
					   float precision,
					   float extrusion,
					   float scale);


protected:
	//! Generates the display lists for vector glyphs for a whole charset
	//! @see CGLFont
	virtual bool glGenGlyphs(float precision = 1.0f,
							 float extrusion = 0.0f,
							 float scale = 1.0f);


private:
	//!	This method generates a display list independently
	//!	This method is called by genGlyphs to generate
	//!	a display list for each char of the font and then reuse
	//!	them sequentially for all glWrite calls
	//! @see genGlyphs for parameters.
	RAPTOR_HANDLE glTTBuildGeometry(const std::string &str,
									float precision = 1.0f,
									float extrusion = 0.0f,
									float scale = 1.0f,
									float *width = NULL,
									float *height = NULL);

	TTOutlineFont	*m_font;
	FTFace			*m_face;
	bool			m_bTexturedFace;
	bool			m_bTexturedSide;

};

RAPTOR_NAMESPACE_END

#endif // !defined(AFX_GL3DFONT_H__81553B3D_92A7_4C82_80E7_B6F98CBD75FA__INCLUDED_)

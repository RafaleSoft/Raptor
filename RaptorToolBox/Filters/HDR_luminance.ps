/***************************************************************************/
/*                                                                         */
/*  HDR_luminance.ps                                                       */
/*                                                                         */
/*    Raptor OpenGL & Vulkan realtime 3D Engine SDK.                       */
/*                                                                         */
/*  Copyright 1998-2021 by                                                 */
/*  Fabrice FERRAND.                                                       */
/*                                                                         */
/*  This file is part of the Raptor project, and may only be used,         */
/*  modified, and distributed under the terms of the Raptor project        */
/*  license, LICENSE.  By continuing to use, modify, or distribute         */
/*  this file you indicate that you have read the license and              */
/*  understand and accept it fully.                                        */
/*                                                                         */
/***************************************************************************/


#version 440

uniform sampler2D color;
uniform vec4 offset;

layout(location = 1) in vec4 g_TexCoord;
layout(location = 0) out vec4 o_Color;

const vec4 luminance = vec4(0.299, 0.587, 0.114, 0.0);

void main(void)
{
	vec4 c = texture(color,g_TexCoord.xy - offset.xy);
	float LMax = dot(c,luminance);

	c = texture(color,g_TexCoord.xy + offset.zy);
	LMax = max(LMax,dot(c,luminance));

	c = texture(color,g_TexCoord.xy - offset.zy);
	LMax = max(LMax,dot(c,luminance));

	c = texture(color,g_TexCoord.xy + offset.xy);
	LMax = max(LMax,dot(c,luminance));

	//  Compute luminance with bilinear components, averaging
	//  the 4 surrouding of the texel's center.
	o_Color = vec4(LMax,LMax,LMax,0.0);
}


#if !defined(AFX_MINICLIENT_H__519257E3_54C3_4640_8153_53A7E61BC259__INCLUDED_)
#define AFX_MINICLIENT_H__519257E3_54C3_4640_8153_53A7E61BC259__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

#include "resource.h"
#include "lexyacc.h"
#include "../Systemdll/Systemdll.h"	//	client server
#include "..\Messages.h"
#include <iostream.h>				// cout
#include <afxtempl.h>				// CArray


class CParser : public CLex
{
public:
	CParser() {};
	~CParser() {};

	void OnError(CLex::LexError err)
	{
		switch(err)
		{
		case CLex::LEX_NOERR:
			cout << "No error found." << endl;
			break;
		case CLex::LEX_ERR_SRC:
			cout << "Error reading source file." << endl;
			break;
		case CLex::LEX_ERR_SYN:
			cout << "Syntax error in lex file." << endl;
			break;
		default:
			cout << "Unknown Lex error." << endl;
			break;
		}
	}
};

class CAnalyser : public CYacc
{
public:
	unsigned int	jobID;

private:
	config_t		config;
	light_t			light;
	coord_t			coord;
	shading_t		shading;
	objectbase_t	objectbase;
	sphere_t		sphere;
	texture_t		texture;
	vertex_t		vertex;
	composition_header_t
					composition;
	triangle_t		triangle;

	MSGSTRUCT		msg;
	unsigned int	parameterID;
	unsigned int	coord_step;
	unsigned int	light_step;
	unsigned int	shading_step;
	unsigned int	objectbase_step;
	unsigned int	elementID;
	unsigned int	vertex_step;
	unsigned int	triangle_step;
	unsigned int	composition_step;
	CString			obj_name;
	CArray<vertex_t,vertex_t&>
					vertices;
	CArray<triangle_t,triangle_t&>
					triangles;

	//	data transmission
	CMapStringToPtr	lights;
	CMapStringToPtr	shadings;
	CMapStringToPtr	spheres;
	CMapStringToPtr	textures;
	CMapStringToPtr	compositions;

	CClient<CClientSocket> *client;

public:
	CAnalyser(CParser *p,CClient<CClientSocket> *c);
	~CAnalyser() {};

	void InitAnalyse();

	//	actions for each element parsed
	void Oncoord(UINT RULE_ID);
	void Onvertex(UINT RULE_ID);
	void Ontriangle(UINT RULE_ID);
	void Onshading(UINT RULE_ID);
	void Onlight(UINT RULE_ID);
	void Onvertices(UINT RULE_ID);
	void Ontriangles(UINT RULE_ID);
	void Onparameter(UINT RULE_ID);
	void Onconfig(UINT RULE_ID);
	void Onelement(UINT RULE_ID);
	void Onelementname(UINT RULE_ID);
	void Ondefine(UINT RULE_ID);
	void Ontexture(UINT RULE_ID);
	void Onobjectbase(UINT RULE_ID);
	void Oncomposition(UINT RULE_ID);
	void Onsphere(UINT RULE_ID);
	void Onobject(UINT RULE_ID);
	void Onobjects(UINT RULE_ID);
	void Onmain(UINT RULE_ID);

private:
	void StartJob();
	void RunJob();
	void SendLights();
	void SendSpheres();
};

#endif // !defined(AFX_MINICLIENT_H__519257E3_54C3_4640_8153_53A7E61BC259__INCLUDED_)

###########################################################################
#                                                                         #
#  Makefile.raptorcore                                                    #
#                                                                         #
#    Raptor OpenGL & Vulkan realtime 3D Engine SDK.                       #
#                                                                         #
#  Copyright 1998-2019 by                                                 #
#  Fabrice FERRAND.                                                       #
#                                                                         #
#  This file is part of the Raptor project, and may only be used,         #
#  modified, and distributed under the terms of the Raptor project        #
#  license, LICENSE.  By continuing to use, modify, or distribute         #
#  this file you indicate that you have read the license and              #
#  understand and accept it fully.                                        #
#                                                                         #
###########################################################################


export

CCCFLAGS =  -DSIMD_NO_ASSEMBLY -DLINUX -fPIC -std=c++11 -fopenmp -msse -msse2 -msse3 -mssse3 -msse4.1 -msse4.2  
OUTPUT = $(RAPTOR_ROOT)/Build/Linux/Release/RaptorCore
SRCDIR = $(RAPTOR_ROOT)/RaptorCore
INCDIRS = -I$(SRCDIR) -I$(RAPTOR_ROOT)/Redist/Include -I$(VULKAN_INCLUDE_PATH) -I$(FREETYPE_INCLUDE_PATH) -I$(XERCES_INCLUDE_PATH)
LDFLAGS = -Bdynamic -shared -lstdc++

# Remove MESA options before all GL extensions are included.
CCCFLAGS += -DGL_MESA_shader_object -DGL_MESA_shader_debug
CCCFLAGS += -DMAX_PATH=PATH_MAX -DGLX_EXTENSIONS

SO = $(OUTPUT)/libRaptorCore.so.$(RAPTOR_VERSION)
LIB = $(OUTPUT)/libRaptorCore.a


HIERARCHY_SRC = \
	$(SRCDIR)/GLHierarchy/3DSet.cpp \
	$(SRCDIR)/GLHierarchy/BumppedGeometry.cpp \
	$(SRCDIR)/GLHierarchy/FragmentProgram.cpp \
	$(SRCDIR)/GLHierarchy/FragmentShader.cpp \
	$(SRCDIR)/GLHierarchy/Geometry.cpp \
	$(SRCDIR)/GLHierarchy/GeometryEditor.cpp \
	$(SRCDIR)/GLHierarchy/GeometryPrimitive.cpp \
	$(SRCDIR)/GLHierarchy/GeometryShader.cpp \
	$(SRCDIR)/GLHierarchy/GLFont.cpp \
	$(SRCDIR)/GLHierarchy/GLLayer.cpp \
	$(SRCDIR)/GLHierarchy/GLLod.cpp \
	$(SRCDIR)/GLHierarchy/IRenderingProperties.cpp \
	$(SRCDIR)/GLHierarchy/ITextureObject.cpp \
	$(SRCDIR)/GLHierarchy/Light.cpp \
	$(SRCDIR)/GLHierarchy/LightObserver.cpp \
	$(SRCDIR)/GLHierarchy/Material.cpp \
	$(SRCDIR)/GLHierarchy/Object3D.cpp \
	$(SRCDIR)/GLHierarchy/Object3DContour.cpp \
	$(SRCDIR)/GLHierarchy/Object3DInstance.cpp \
	$(SRCDIR)/GLHierarchy/Object3DInstanceSet.cpp \
	$(SRCDIR)/GLHierarchy/Object3DShadow.cpp \
	$(SRCDIR)/GLHierarchy/ObjectFactory.cpp \
	$(SRCDIR)/GLHierarchy/ObjectProperties.cpp \
	$(SRCDIR)/GLHierarchy/OpenGLProgramStage.cpp \
	$(SRCDIR)/GLHierarchy/OpenGLShaderStage.cpp \
	$(SRCDIR)/GLHierarchy/Particle.cpp \
	$(SRCDIR)/GLHierarchy/PerlinNoise.cpp \
	$(SRCDIR)/GLHierarchy/Persistence.cpp \
	$(SRCDIR)/GLHierarchy/Projector.cpp \
	$(SRCDIR)/GLHierarchy/ShadedGeometry.cpp \
	$(SRCDIR)/GLHierarchy/Shader.cpp \
	$(SRCDIR)/GLHierarchy/ShaderProgram.cpp \
	$(SRCDIR)/GLHierarchy/SimpleObject.cpp \
	$(SRCDIR)/GLHierarchy/TextureFactory.cpp \
	$(SRCDIR)/GLHierarchy/TextureFactoryConfig.cpp \
	$(SRCDIR)/GLHierarchy/TextureSet.cpp \
	$(SRCDIR)/GLHierarchy/TextureUnitSetup.cpp \
	$(SRCDIR)/GLHierarchy/UnifiedShader.cpp \
	$(SRCDIR)/GLHierarchy/VertexProgram.cpp \
	$(SRCDIR)/GLHierarchy/VertexShader.cpp
	

ENGINE_SRC = \
	$(SRCDIR)/Engine/Animator.cpp \
	$(SRCDIR)/Engine/3DEngine.cpp \
	$(SRCDIR)/Engine/3DEngineMatrix.cpp \
	$(SRCDIR)/Engine/3DEngineTaskManager.cpp \
	$(SRCDIR)/Engine/3DPath.cpp \
	$(SRCDIR)/Engine/3DScene.cpp \
	$(SRCDIR)/Engine/BoundingBox.cpp \
	$(SRCDIR)/Engine/EngineJob.cpp \
	$(SRCDIR)/Engine/Environment.cpp \
	$(SRCDIR)/Engine/GeometricModifier.cpp \
	$(SRCDIR)/Engine/ImageModifier.cpp \
	$(SRCDIR)/Engine/LightModifier.cpp \
	$(SRCDIR)/Engine/Modifier.cpp \
	$(SRCDIR)/Engine/OmniShadowMap.cpp \
	$(SRCDIR)/Engine/Physics.cpp \
	$(SRCDIR)/Engine/ParticleManager.cpp \
	$(SRCDIR)/Engine/ShadowMap.cpp \
	$(SRCDIR)/Engine/ShadowVolume.cpp \
	$(SRCDIR)/Engine/TimeObject.cpp \
	$(SRCDIR)/Engine/ViewModifier.cpp \
	$(SRCDIR)/Engine/IViewPoint.cpp 


SYSTEM_SRC = \
	$(SRCDIR)/System/CGLTypes.cpp \
	$(SRCDIR)/System/Color.cpp \
	$(SRCDIR)/System/Memory.cpp \
	$(SRCDIR)/System/Raptor.cpp \
	$(SRCDIR)/System/RaptorApplication.cpp \
	$(SRCDIR)/System/RaptorBufferDisplay.cpp \
	$(SRCDIR)/System/RaptorConfig.cpp \
	$(SRCDIR)/System/RaptorConsole.cpp \
	$(SRCDIR)/System/RaptorDisplay.cpp \
	$(SRCDIR)/System/RaptorDisplayConfig.cpp \
	$(SRCDIR)/System/RaptorDisplayFilter.cpp \
	$(SRCDIR)/System/RenderEntryPoint.cpp \
	$(SRCDIR)/System/RaptorErrorManager.cpp \
	$(SRCDIR)/System/RaptorGLExtensions.cpp \
	$(SRCDIR)/System/RaptorVKExtensions.cpp \
	$(SRCDIR)/System/RaptorFilteredDisplay.cpp \
	$(SRCDIR)/System/RaptorIO.cpp \
	$(SRCDIR)/System/RaptorMessages.cpp \
	$(SRCDIR)/System/RaptorRenderBufferDisplay.cpp \
	$(SRCDIR)/System/RaptorScreenDisplay.cpp \
	$(SRCDIR)/System/RaptorVulkanDisplay.cpp

SUBSYS_SRC = \
	$(SRCDIR)/Subsys/3DSceneAttributes.cpp \
	$(SRCDIR)/Subsys/3DSceneObject.cpp \
	$(SRCDIR)/Subsys/3DSetItem.cpp \
	$(SRCDIR)/Subsys/AnimatorStream.cpp \
	$(SRCDIR)/Subsys/BlinnShader.cpp \
	$(SRCDIR)/Subsys/BumpShader.cpp \
	$(SRCDIR)/Subsys/Collisions.cpp \
	$(SRCDIR)/Subsys/ContextManager.cpp \
	$(SRCDIR)/Subsys/ContourAttributes.cpp \
	$(SRCDIR)/Subsys/DefaultAlphaTransparency.cpp \
	$(SRCDIR)/Subsys/DefaultBumpmapLoader.cpp \
	$(SRCDIR)/Subsys/DefaultImageScaler.cpp \
	$(SRCDIR)/Subsys/GeometryAllocator.cpp \
	$(SRCDIR)/Subsys/Interpreters.cpp \
	$(SRCDIR)/Subsys/LightAttributes.cpp \
	$(SRCDIR)/Subsys/Object3DShadowAttributes.cpp \
	$(SRCDIR)/Subsys/PlayFrameJob.cpp \
	$(SRCDIR)/Subsys/PhongShader.cpp \
	$(SRCDIR)/Subsys/RaptorInstance.cpp \
	$(SRCDIR)/Subsys/RegisterCombiner.cpp \
	$(SRCDIR)/Subsys/ShaderLibrary.cpp \
	$(SRCDIR)/Subsys/ShadowVolumeJob.cpp \
	$(SRCDIR)/Subsys/SubBoundingBox.cpp \
	$(SRCDIR)/Subsys/TexelAllocator.cpp \
	$(SRCDIR)/Subsys/VideoStream.cpp \
	$(SRCDIR)/Subsys/XMLRaptorIO.cpp


SUBSYS_SCRIPT_SRC = \
	$(SRCDIR)/Subsys/ObjectModels/RaptorScript_lex.cpp \
	$(SRCDIR)/Subsys/ObjectModels/RaptorScript_yacc.cpp \
	$(SRCDIR)/Subsys/ObjectModels/RaptorScript_tree.cpp \
	$(SRCDIR)/Subsys/ObjectModels/RaptorScript_lex.h \
	$(SRCDIR)/Subsys/ObjectModels/RaptorScript_yacc.h \
	$(SRCDIR)/Subsys/ObjectModels/RaptorScript_tree.h 

SUBSYS_LEXSCRIPT_SRC = \
	$(SRCDIR)/Subsys/ObjectModels/Raptor.lex \
	$(SRCDIR)/Subsys/ObjectModels/Basic.lex \
	$(SRCDIR)/Subsys/ObjectModels/Expressions.lex \
	$(SRCDIR)/Subsys/ObjectModels/Commands.lex


GLXSPECIFIC_SRC = \
	$(SRCDIR)/GLXSpecific/GLXApplication.cpp \
	$(SRCDIR)/GLXSpecific/GLXAnimatorStream.cpp \
	$(SRCDIR)/GLXSpecific/GLXContextManager.cpp \
	$(SRCDIR)/GLXSpecific/GLXEngineTaskManager.cpp \
	$(SRCDIR)/GLXSpecific/GLXView.cpp


HIERARCHY_OBJS = $(HIERARCHY_SRC:$(SRCDIR)/GLHierarchy%.cpp=$(OUTPUT)%.o)
ENGINE_OBJS = $(ENGINE_SRC:$(SRCDIR)/Engine%.cpp=$(OUTPUT)%.o)
SYSTEM_OBJS = $(SYSTEM_SRC:$(SRCDIR)/System%.cpp=$(OUTPUT)%.o)
SUBSYS_OBJS = $(SUBSYS_SRC:$(SRCDIR)/Subsys%.cpp=$(OUTPUT)%.o)
SUBSYS_SCRIPT_OBJS = $(OUTPUT)/RaptorScript_lex.o $(OUTPUT)/RaptorScript_yacc.o $(OUTPUT)/RaptorScript_tree.o
GLXSPECIFIC_OBJS = $(GLXSPECIFIC_SRC:$(SRCDIR)/GLXSpecific%.cpp=$(OUTPUT)%.o)
CODE_GENERATION = $(SRCDIR)/Subsys/CodeGeneration.h

ALL_OBJS = $(HIERARCHY_OBJS) $(ENGINE_OBJS) $(SYSTEM_OBJS) $(SUBSYS_OBJS) $(GLXSPECIFIC_OBJS) $(SUBSYS_SCRIPT_OBJS) $(OUTPUT)/Simplex.o

all:    $(LIB) $(SO)

clean:
	rm -rf $(OUTPUT)
	rm -f $(SUBSYS_SCRIPT_SRC)
	rm -f $(CODE_GENERATION)
	mkdir -p $(OUTPUT)

$(LIB):  $(ALL_OBJS)
	ar -qcv $(LIB) $(ALL_OBJS)
	cp $(LIB) $(RAPTOR_ROOT)/Redist/Lib

$(SO): $(ALL_OBJS)
	g++ -o $(SO) $(LDFLAGS) $(ALL_OBJS)
	cp $(SO) $(RAPTOR_ROOT)/Redist/Bin

$(HIERARCHY_OBJS): $(HIERARCHY_SRC) $(CODE_GENERATION)
	g++  $(CCCFLAGS) $(INCDIRS) -c $(<D)/$(*F).cpp  -o $(OUTPUT)/$(@F)

$(ENGINE_OBJS): $(ENGINE_SRC) $(SUBSYS_SCRIPT_SRC) $(CODE_GENERATION)
	g++  $(CCCFLAGS) $(INCDIRS) -c $(<D)/$(*F).cpp  -o $(OUTPUT)/$(@F)

$(SYSTEM_OBJS):	$(SYSTEM_SRC) $(CODE_GENERATION)
	g++ $(CCCFLAGS) $(INCDIRS) $(INCXERCES) -c $(<D)/$(*F).cpp  -o $(OUTPUT)/$(@F)

$(SUBSYS_OBJS):	$(SUBSYS_SRC) $(CODE_GENERATION)
	g++ $(CCCFLAGS) $(INCDIRS) $(INCXERCES) -c $(<D)/$(*F).cpp  -o $(OUTPUT)/$(@F)

$(OUTPUT)/Simplex.o:	$(SRCDIR)/Subsys/Hershey/Simplex.cpp $(CODE_GENERATION)
	g++ $(CCCFLAGS) $(INCDIRS) -c $(<D)/$(*F).cpp  -o $(OUTPUT)/$(@F)

$(SUBSYS_SCRIPT_OBJS):	$(SUBSYS_SCRIPT_SRC) $(CODE_GENERATION)
	g++ $(CCCFLAGS) $(INCDIRS) -c $(<D)/$(*F).cpp  -o $(OUTPUT)/$(@F)

$(GLXSPECIFIC_OBJS): $(GLXSPECIFIC_SRC) $(CODE_GENERATION)
	g++ $(CCCFLAGS) $(INCDIRS) -c $(<D)/$(*F).cpp  -o $(OUTPUT)/$(@F)

$(SUBSYS_SCRIPT_SRC):	$(SUBSYS_LEXSCRIPT_SRC) $(CODE_GENERATION)
	(cd $(SRCDIR)/Subsys/ObjectModels && $(RAPTOR_ROOT)/Redist/Bin/Microlex -f Raptor.lex -o RaptorScript -v)

$(CODE_GENERATION):
	( cd $(SRCDIR)/Subsys && $(RAPTOR_ROOT)/Redist/Bin/Builder -v -e RAPTOR_SMP_CODE_GENERATION -d GL_ARB_multisample)
	cp $(SRCDIR)/Subsys/CodeGeneration.h $(RAPTOR_ROOT)/Redist/Include/Subsys

